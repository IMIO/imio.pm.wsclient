[buildout]
index = http://devpi.imio.be/root/imio/+simple/

extensions =
    mr.developer
allow-picked-versions = false

parts =
    productdistros
    omelette
    instance1
    zopepy
    repozo

# If you want to get the last versions of eggs, you have to comment the line "versions-prod.cfg"
extends =
# Use .../pm40/ and ws.cfg to run against last stable PM version, or .../pm41/... and ws-dev.cfg to use trunk
    http://svn.communesplone.org/svn/communesplone/buildout/server.mc/tags/pm41/base.cfg
    http://svn.communesplone.org/svn/communesplone/buildout/server.mc/tags/pm41/ws-dev.cfg
    http://svn.communesplone.org/svn/communesplone/buildout/server.mc/tags/pm41/versions-base.cfg

#    http://svn.communesplone.org/svn/communesplone/buildout/server.mc/tags/pm40/base.cfg
#    http://svn.communesplone.org/svn/communesplone/buildout/server.mc/tags/pm40/ws-dev.cfg
#    http://svn.communesplone.org/svn/communesplone/buildout/server.mc/tags/pm40/versions-dev.cfg

    versions-base.cfg

versions=versions

eggs =
    Plone
    Pillow

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop = .

auto-checkout -=
    imio.pm.wsclient

[sources]

[productdistros]
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages =

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance1:eggs}
products =

[instance1]
recipe = plone.recipe.zope2instance
#effective-user =
user = admin:admin
http-address = 8082
zserver-threads = 4
debug-mode = off
verbose-security = off
zope-conf-additional =
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
environment-vars =
  PYTHON_EGG_CACHE ${buildout:directory}/python-eggs
  zope_i18n_compile_mo_files true

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    Products.DocFinderTab

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance1:eggs}
interpreter = zopepy
scripts = zopepy

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo
