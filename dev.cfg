[buildout]
extends =
    base.cfg
    versions-dev.cfg

parts +=
    test
    coverage
    report

extensions +=
    mr.developer

auto-checkout +=
    imio.pm.ws
    Products.PloneMeeting
    imio.pm.locales
    ZSI
    z3c.soap
    Products.PasswordStrength

[sources]
Products.PloneMeeting = svn http://svn.communesplone.org/svn/communesplone/Products.PloneMeeting/trunk
imio.pm.locales = svn http://svn.communesplone.org/svn/communesplone/imio.pm.locales/trunk/
ZSI = svn http://svn.communesplone.org/svn/communesplone/ZSI/trunk
imio.pm.ws = svn http://svn.communesplone.org/svn/communesplone/imio.pm.ws/trunk
z3c.soap = git git://github.com/zopefoundation/z3c.soap.git
Products.PasswordStrength = git git://github.com/collective/Products.PasswordStrength.git branch=4.3

[instance1]
#use the instance1 eggs to extends the base eggs defined in [buildout]
recipe = plone.recipe.zope2instance
debug-mode = on
verbose-security = on
environment-vars +=
    ENABLE_PRINTING_MAILHOST True
    IS_DEV_ENV True 

eggs +=
    Products.PrintingMailHost
    archetypes.schematuning
    ipdb
    iw.debug
    plone.reload
#    plone.app.z3cform

zcml +=
    iw.debug
#    plone.app.z3cform

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    ipdb
    imio.pm.wsclient [test]
    imio.pm.ws [test]
    Products.PloneMeeting [test]
    ZSI
    z3c.soap
    plone.app.z3cform

environment = testenv
initialization =
    sys.argv = sys.argv[:] + ['-s', 'imio.pm.wsclient']

[testenv]
zope_i18n_compile_mo_files = true
IS_DEV_ENV = true 

# create bin/coverage commant
[coverage]
recipe = zc.recipe.egg
eggs = coverage

# create bin/report command
[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']
